@{
    ViewBag.Title = "Home Page";
    var user = Session["user"] as WebDemo2.Models.LoginModel;
}
<div>
    <h1 class="test">ASP.NET</h1>
    <p class="lead">Chào các bạn bây giờ là: @DateTime.Now.ToString()</p>
    <p><a href="https://asp.net" class="btn btn-primary btn-lg">Learn more &raquo;</a></p>
</div>

<div class="row">
    <div class="col-md-4">
        @{
            int kq;
            string ketqua;
            if (IsPost)
            {
                var num1 = Request["so1"];
                var num2 = Request["so2"];
                kq = num1.AsInt() + num2.AsInt();
                ketqua = kq.ToString();
            }
            else { ketqua = ""; }
        }
        <h2>Bảng tính cộng</h2>
        <form role="form" action="" method="post">
            <div class="form-group">
                <label>Nhập số nguyên thứ nhất</label>
                <input type="text" class="form-control" id="so1" name="so1">
            </div>
            <div class="form-group">
                <label for="exampleInputPassword1">Số nguyên thứ hai</label>
                <input type="text" class="form-control" id="so2" name="so2">
            </div>
            <button type="submit" class="btn btn-primary mt-2">Cộng</button>
            <p>Kết quả: @ketqua</p>
        </form>
    </div>

    <div class="col-md-4">
        @{
            if (user != null)
            {
                <h2>Xin chao @user.username</h2>
                <h4>Bạn đã đăng nhập thành công bằng cách dùng Session</h4>
                <button class="btn btn-outline-warning">
                   <a class="nav-link active" href="/Home/LogOut">Đăng Xuất</a>
                </button>
            }
            else
            {
                <h2>Đăng nhập</h2>
                Html.RenderPartial("Login");
            }
        }

    </div>
    <div class="col-md-4">
        <h2>Đăng ký </h2>
        @{Html.RenderPartial("Register");}
    </div>
    <div class="col-md-10">
        <h2>Bảng so sánh</h2>
        <table class="table">
            <thead>
                <tr>
                    <th scope="col" colspan="2">Nội dung </th>
                    <th scope="col">Giống nhau</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>Stack</td>
                    <td>Heap nằm giữa stack và Permanent Storage area, và độ lớn có thể thay đổi khi thực thi chương trình.</td>
                    <td>Stack và heap là các vùng bộ nhớ</td>
                </tr>
                <tr>
                    <td>Boxing là chuyển đổi kiểu giá trị thành kiểu tham chiếu</td>
                    <td>Un-Boxing ngược lại.</td>
                    <td>dùng để chuyển đổi giá trị và tham chiếu</td>
                </tr>
                <tr>
                    <td>Error là lỗi của chương trình</td>
                    <td>Exception là lỗi chương trình được phát hiện và có thể xử lý.</td>
                    <td></td>
                </tr>
                <tr>
                    <td>ActionResult thường được sử dụng khi bạn muốn trả về 1 view hoặc file hoặc jsondata hoặc điều hướng tới 1 url khác.</td>
                    <td>JsonResult thường được sử dụng khi bạn muốn trả về jsondata tới 1 client.</td>
                    <td></td>
                </tr>
                <tr>
                    <td>Sử dụng câu lệnh break, bạn có thể nhảy ra khỏi vòng lặp.</td>
                    <td>Sử dụng câu lệnh continue, bạn có thể nhảy qua một lần lặp và sau đó tiếp tục thực hiện vòng lặp của mình.</td>
                    <td></td>
                </tr>
                <tr>
                    <td></td>
                    <td></td>
                    <td></td>
                </tr>
            </tbody>
        </table>
    </div>
</div>